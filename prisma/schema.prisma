generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id       Int     @id @default(autoincrement())
  email    String  @unique
  password String?
}

model Blob {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  dailyView   Int      @default(0)
  description String?
  Filter      Filter[]
}

model Filter {
  id       Int    @id @default(autoincrement())
  blobId   Int
  blob     Blob   @relation(fields: [blobId], references: [id], onDelete: Cascade)
  sourceId Int
  source   Source @relation(fields: [sourceId], references: [id], onDelete: Cascade)
  tagId    Int?
  tag      Tag?   @relation(fields: [tagId], references: [id])

  @@unique([blobId, sourceId, tagId])
}

model Post {
  id        Int       @id @default(autoincrement())
  date      DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  title     String    @default("")
  content   String?
  summary   String?
  URL       String    @unique
  image     String?
  sourceId  Int
  tags      Tag[]
  source    Source    @relation(fields: [sourceId], references: [id])

  // @@index([sourceId], map: "Post_sourceId_fkey")
}

model Tag {
  id     Int      @id @default(autoincrement())
  name   String   @unique
  posts  Post[]
  Filter Filter[]
}

model Source {
  id          Int       @id @default(autoincrement())
  name        String
  type        String    @default("FEED")
  URL         String    @unique
  updatedAt   DateTime? @default(now())
  createdAt   DateTime  @default(now())
  lastError   String?
  status      String    @default("OK")
  nErrors     Int       @default(0)
  description String?
  image       String?
  link        String?
  posts       Post[]
  Filter      Filter[]
}
